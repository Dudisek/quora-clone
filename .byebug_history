quit
@top_stories.upvotequits
@top_stories.upvotes
@top_stories.upvotes.first
Question.upvotes.first
Question.upvotes

@top_stories.upvotes
@top_stories
quit
q = Qvote.create(upvote: 1, question_id: id)qu
q = Qvote.create(upvote: 1, question_id: id)
q.question_id
puts q
q
q = Qvote.create(upvote: 1, question_id: params[:question_id])
post "/upvote/:id" 
puts :id
:id
q = Qvote.create(upvote: 1, question_id: params[:question_id])
quit
ahoj.each do |a| p a end
ahoj.each do |a|
ahoj = @user.answers
@user.answers.count
@user.answers.all
@user.answers.comment
@user.answers.all
@user.answers.count
y
quit
user_answers = Answer.find_by(user_id: params[:user_id])
quit
user_answers = Answer.find_by(user_id: params[:user_id])
quit
user_answers = Answer.find_by(user_id: params[:user_id])
quit
Answer.find_by(user_id: params[:user_id])
Answer.first
Answer.all
quit
Answer.where(user_id: params[:user_id]quit
Answer.where(user_id: params[:user_id]
q.answers
q.answers.comment
q.answers.comments
q.answers.comment
q.answers.count
quit
(user_id: params[:user_id])
user_id: params[:user_id]
ahoj.each do |a|
ahoj.all
ahoj
ahoj = Answer.select(user_id: params[:user_id])
Answer.select(user_id: params[:user_id])
Answer.all
Answer
Answers
Answer.where(user_id)
user_id
user.id
params[:user_id]
Answer
params[:question_id]
Answer.params[:question_id]
params[:question_id]
Answer.where(question_id: params[:question_id])
quitAnswer.where(question_id: params[:question_id])
quit
a
quit
Answer.where(user_id: 7)
Answer.find_by(user_id: 7)
quit
Answer.find_by(user_id: 7)
@user
@user.questions.answers
@user
quit
@question
@questions
@user.question.answers
@user.questions.answers
@user
quit
user.update(name: params[:name], email: params[:email], description: params[:description])
exit
user.errors.full_messages
@errors
errors
error
c
errors
error
c
error
errors
user.save
user.id
current_user.id
user.update(name: params[:name], email: params[:email], password: params[:password], description: params[:description])
user
name: params[:name]
description: params[:description]
quit
y
User.find(params[:id])quit
User.find(params[:id])
quit
User.find(params[:id])
@user
@user = User.find(params[:id])
/users/:id/
params[:id]
id: params[:id]
params[:id]
params[:user]
params[:users]
@current_user
@current_user.id
@user.id
@user
c
quit
current_user
@current_user
@user
quit
@user.questions
@user
quit
a
a = params[:page]
params[:page -1]
params[:page] - 1
params[:page]
page
:page
c
quit
@previouspage
@previous
current_page
@current_page
quit
@current_page
c
@current_page
quit
c
quit
quit.
q.title.length
quit
b
a.title.count
a.title.length
quit
users_questions
n
users_questions
Question.where(user_id: current_user.id).limit(10)
quit
current_user.id)
Question.where(user_id: current_user.id)%>
quit
n
m
n
Question.where(user_id: current_user.id)
users_questions
quit
Time.now
a.created_at
a
continue
@top_stories
top_stories
quit
n
c
by
n
User.find(a.user_id)
by
quit
User.find(a.user_id)
find(84)
find(a.user_id).all
find(a.user_id).where
find(a.user_id)
name.user_id
a.name.user_id
a.user_id(select: name)
a.user_id
a
quit
y
c
@question.answers
quit
@question.answers
@question
@question.answers
@answer
answer
@answer
answers
@question
question
continue
c
User.create(name: Faker::Internet.user_name, email: Faker::Internet.email, password_digest: "123456", description: Faker::Lorem.paragraph )
c
User.create(name: Faker::Internet.user_name, email: Faker::Internet.email, password_digest: "123456", description: Faker::Lorem.paragraph )
c
ads
ads = Qvote.new(upvote: params[:upvote], question_id: params[:question_id])
ads = Qvote.new(upvote: params[:upvote], question_id: params[question_id])
ads = Qvote.new(qvote: params[:upvote], question_id: params[question_id])
Qvote.new(upvote: params[:upvote])
p q
q
quit
puts q.upvote
print q
q
q.upvote.delete
q.upvote.destroy
q.upvote
c
error
@error
c
erb :"user/registration", :flash =>{:error => "Idsa"}
:flash => {:error => "Udsad!" }}
:error
error
:flash
c
User.create(password_confirmation: params[:password_confirmation])
user
c
user
quit
p user
c
Qvote.create(upvote: 1, question_id: params[:question_id])
quit
Qvote.create(upvote: 1)
quit
Qvote.find(1)
Qvote.find(upvote: params[:upvote])
Qvote
q
