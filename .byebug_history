quit
question_id: params[:question_id]
a = (question_id: params[:question_id])
question_id: params[:question_id]
quit
question_id: params[:question_id]
c
n
voting
quit
voting.upvote
voting
quit
Qvote.find_by(user_id: current_user, question_id: params[:question_id]).nil?
quitvoting
quit
voting
quit
voting
votign
Qvote.find_by(user_id: current_user, question_id: params[:question_id])
Qvote
voting
voting = Qvote.find_by(user_id: current_user, question_id: params[:question_id])
voting
a = voting = Qvote.find_by(user_id: current_user, question_id: params[:question_id])
voting = Qvote.find_by(user_id: current_user, question_id: params[:question_id])
@question.id
@question.qvotes
question.qvotes
question.upvotes
quit
voting.question_iqui
voting.question_id
voting question_id
question_id
current_user
current user
voting.upvote
voting
quit
voting.upvote
voting.downvote
voting.upvote
voting
quit
Qvote.where(params[:question_id], user_id: current_user)
a.question_id
a.upvote
a = Qvote.where(params[:question_id], user_id: current_user)
a
a = Qvote.where(params[:question_id], user_id: current_user)
Qvote.where(params[:question_id], user_id: current_user)
q.upvote
q.name
q.user_id
q.each do |a| puts a end
print q
q
Qvote
n
Qvote
q
quit
n
c
Qvote
n
Qvote
c
qvote
Qvote
quit
quity
quit
Qvote
Qvote.connection
Qvote
quit
Qvote
voting = Qvote.where(params[:question_id])
quit
current_user
Qvote
Upvote
q = Qvote.create(upvote: 1, question_id: params[:question_id])
voting = Qvote.find(params[:question_id])
c
n
c
n
quit
quti
voting.upvote
voting = Qvote.find(params[:question_id])
c
n
c
quitc
quit
upvote
quit
q.upvote.nil?
q.upvote
upvote
quit
@top_stories.upvotequits
@top_stories.upvotes
@top_stories.upvotes.first
Question.upvotes.first
Question.upvotes
@top_stories.upvotes
@top_stories
quit
q = Qvote.create(upvote: 1, question_id: id)qu
q = Qvote.create(upvote: 1, question_id: id)
q.question_id
puts q
q
q = Qvote.create(upvote: 1, question_id: params[:question_id])
post "/upvote/:id" 
puts :id
:id
q = Qvote.create(upvote: 1, question_id: params[:question_id])
quit
ahoj.each do |a| p a end
ahoj.each do |a|
ahoj = @user.answers
@user.answers.count
@user.answers.all
@user.answers.comment
@user.answers.all
@user.answers.count
y
quit
user_answers = Answer.find_by(user_id: params[:user_id])
quit
user_answers = Answer.find_by(user_id: params[:user_id])
quit
user_answers = Answer.find_by(user_id: params[:user_id])
quit
Answer.find_by(user_id: params[:user_id])
Answer.first
Answer.all
quit
Answer.where(user_id: params[:user_id]quit
Answer.where(user_id: params[:user_id]
q.answers
q.answers.comment
q.answers.comments
q.answers.comment
q.answers.count
quit
(user_id: params[:user_id])
user_id: params[:user_id]
ahoj.each do |a|
ahoj.all
ahoj
ahoj = Answer.select(user_id: params[:user_id])
Answer.select(user_id: params[:user_id])
Answer.all
Answer
Answers
Answer.where(user_id)
user_id
user.id
params[:user_id]
Answer
params[:question_id]
Answer.params[:question_id]
params[:question_id]
Answer.where(question_id: params[:question_id])
quitAnswer.where(question_id: params[:question_id])
quit
a
quit
Answer.where(user_id: 7)
Answer.find_by(user_id: 7)
quit
Answer.find_by(user_id: 7)
@user
@user.questions.answers
@user
quit
@question
@questions
@user.question.answers
@user.questions.answers
@user
quit
user.update(name: params[:name], email: params[:email], description: params[:description])
exit
user.errors.full_messages
@errors
errors
error
c
errors
error
c
error
errors
user.save
user.id
current_user.id
user.update(name: params[:name], email: params[:email], password: params[:password], description: params[:description])
user
name: params[:name]
description: params[:description]
quit
y
User.find(params[:id])quit
User.find(params[:id])
quit
User.find(params[:id])
@user
@user = User.find(params[:id])
/users/:id/
params[:id]
id: params[:id]
params[:id]
params[:user]
params[:users]
@current_user
@current_user.id
@user.id
@user
c
quit
current_user
@current_user
@user
quit
@user.questions
@user
quit
a
a = params[:page]
params[:page -1]
params[:page] - 1
params[:page]
page
:page
c
quit
@previouspage
@previous
current_page
@current_page
quit
@current_page
c
@current_page
quit
c
quit
